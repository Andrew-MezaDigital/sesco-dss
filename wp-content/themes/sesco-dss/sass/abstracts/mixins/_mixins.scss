// Center block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
  width: map-get($columns, $numberColumns) -
    (($columns__margin * ($numberColumns - 1)) / $numberColumns);
}

// FLEXBOX
@mixin display(
  $display: flex,
  $flow: null,
  $justify-content: null,
  $align-items: null
) {
  display: $display;
  flex-flow: $flow;
  justify-content: $justify-content;
  align-items: $align-items;
}

// PSEUDOS
@mixin shape {
  content: "";
  display: block;
}

// POSITIONING
@mixin position(
  $position: relative,
  $z-index: null,
  $dir: null,
  $xy: null,
  $transform: null
) {
  position: $position;
  z-index: $z-index;
  @if ($dir and $xy) {
    @each $d in $dir {
      $i: index($dir, $d);
      @if (length($xy) > ($i - 1)) {
        #{$d}: #{nth($xy, $i)};
      }
    }
  }
  transform: $transform;
}

// SIZING
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// HOVER
@mixin hover {
  &:hover,
  &:focus {
    @content;
  }
}

// COLOR
@mixin colors( $bg-color, $txt-color, $link-color: $txt-color, $link-hover-color: $link-color ) {
  background-color: $bg-color;
  color: $txt-color;

  a:not(.btn):not(.img-w) {
    @include display(inline-block);
    padding: 0.1em 0;
    border-bottom: 0.1rem solid transparent;
    color: $link-color;
    transition: border 0.2s ease-out;

    @if $link-color == $txt-color {
      border-bottom-color: $link-color;
    }

    @include hover {
      color: $link-hover-color;

      @if $link-color == $link-hover-color {
        border-bottom-color: transparent;
      }
    }
  }
}

// TRANSITION
@mixin transition($transition: all 0.25s ease-out) {
  transition: $transition;
}
